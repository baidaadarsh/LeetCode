[21. Merge Two Sorted Lists]

Question:

Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

My Solution:

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode temp, temp2;
        if(l1!= null && l2 != null) {
            if(l1.val < l2.val) {
                temp  = l1;
                temp2 = temp;
                l1 = l1.next;
            } else {
                temp = l2;
                temp2 = temp;
                l2 = l2.next;
            }
        }else {
            temp = null;
        }
        temp2 = temp;
        while(temp != null && l1 != null && l2 != null) {
            if(l1.val < l2.val) {
                temp.next = l1;
                temp = temp.next;
                l1 = l1.next;
            } else {
                temp.next = l2;
                temp = temp.next;
                l2 = l2.next;
            }            
        }
        if(l1 != null) {
            if(temp != null)
                temp.next = l1;
            else
                return l1;
        }
        if(l2 != null) {
            if(temp != null)
                temp.next = l2;
            else
                return l2;
        }
        return temp2;
    }
}

Leetcode Solution:
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null) return l2;
        else if(l2 == null) return l1;
        
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        while(l1 != null && l2 != null){
            if(l1.val < l2.val){
                cur.next = l1;
                l1 = l1.next;
            }else{
                cur.next = l2;
                l2 = l2.next;
            }
            cur = cur.next;
        }
        cur.next = l1 == null? l2 : l1;
        return dummy.next;
    }
}

Approach:
1. Brute Force Approach [Ugly code :(]

Learnings:
1. Write neat code.
