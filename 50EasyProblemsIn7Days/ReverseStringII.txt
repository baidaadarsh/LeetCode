[541. Reverse String II]

Question:
Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Restrictions:
The string consists of lower English letters only.
Length of the given string and k will in the range [1, 10000]

My Solution:
class Solution {
    public String reverseStr(String s, int k) {
        int startPointer = 0, endPointer, sEnd = s.length() - 1, i, j;
        char[] charArray;
        
        charArray = s.toCharArray();
        while(startPointer <= sEnd) {
            endPointer = startPointer + (2 * k) - 1;
            if(endPointer > sEnd)
                endPointer = sEnd;
            i = startPointer;
            j = startPointer + k - 1;
            if(j > endPointer)
                j = endPointer;
            while(i < j) {
                swap(charArray, i, j);
                i++;
                j--;
            }
            startPointer = endPointer + 1;            
        }
        
        return new String(charArray);
    }
    
    public void swap(char[] charArray, int i, int j) {
        char temp;
        
        temp = charArray[i];
        charArray[i] = charArray[j];
        charArray[j] = temp;
    }
}

Leetcode Solution:
class Solution {
    public String reverseStr(String s, int k) {
        char[] a = s.toCharArray();
        for (int start = 0; start < a.length; start += 2 * k) {
            int i = start, j = Math.min(start + k - 1, a.length - 1);
            while (i < j) {
                char tmp = a[i];
                a[i++] = a[j];
                a[j--] = tmp;
            }
        }
        return new String(a);
    }
}

Approach:
1. Using StringBuilder
2. Using charArray [This approach is mostly better when considered with StringBuilder]
