[125. Valid Palindrome]
Question:
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false
 

Constraints:

s consists only of printable ASCII characters.

My Solution:
class Solution {
    public boolean isPalindrome(String s) {
        int len = s.length(), left = 0, right;
        right = len - 1;
        
        while(left <= right) {
            while( left <= right && !isAlphaNumeric(s.charAt(left)))
                  left++;
            while(left <= right && !isAlphaNumeric(s.charAt(right)))
                  right--;
            if(left <= right && notPalindrome(s.charAt(left), s.charAt(right)))
                  return false;
            left++;
            right--;
        }
        
        return true;
    }
                  
    public boolean notPalindrome(char left, char right) {
        return !(Character.toLowerCase(left) == Character.toLowerCase(right));
    }
    
    public boolean isAlphaNumeric(char c) {
        return ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || ( c >= '0' && c <= '9'));
    }
}
